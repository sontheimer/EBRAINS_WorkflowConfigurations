<?xml version="1.0" encoding="UTF-8" ?>
<settings>
    <co_simulation_action_plan>
        <title>Test the transformer Nest to TVB</title>
        <description>Test the transformer Nest to TVB</description>
        <variables>
            <!--    
                The values for the variables under this section, 
                will be set on run-time when is required (e.g. ${CO_SIM_ENV_VAR} or ${HOME})
                and held on a python dictionary
                    
                NOTE: the NAME of the variable is the dictionary KEY to have access to its value
            -->
            <var_000>
                <var_name>CO_SIM_ROOT_PATH</var_name>
                <var_value>${CO_SIM_ROOT_PATH}</var_value>
            </var_000>
            <var_001>
                <var_name>CO_SIM_MODULES_ROOT_PATH</var_name>
                <var_value>${CO_SIM_MODULES_ROOT_PATH}</var_value>
            </var_001>
            <var_002>
                <var_name>CO_SIM_USE_CASE_ROOT_PATH</var_name>
                <var_value>${CO_SIM_USE_CASE_ROOT_PATH}</var_value>
            </var_002>
            <var_003>
                <var_name>CO_SIM_ACTIONS_PATH</var_name>
                <!-- The Co-Simulator will get the ${CO_SIM_TVB_NEST_PATH} value on run-time -->
                <var_value>{CO_SIM_MODULES_ROOT_PATH}/EBRAINS_WorkflowConfigurations/actions</var_value>
            </var_003>
            <var_004>
                <var_name>CO_SIM_ROUTINES_PATH</var_name>
                <var_value>{CO_SIM_USE_CASE_ROOT_PATH}/action_adapters_zerlaut</var_value>
            </var_004>
            <var_006>
                <var_name>CO_SIM_EXECUTION_ENVIRONMENT</var_name>
                <var_value>Local</var_value>
            </var_006>
            <var_007>
                <var_name>CO_SIM_PARAMETERS_PATH</var_name>
                <var_value>{CO_SIM_USE_CASE_ROOT_PATH}/parameters</var_value>
            </var_007>
        </variables>
        <parameters>
            <!-- functional parameters specific to this (current) action plan -->
            <!-- these CO_SIM_* parameters are created as a dictionary -->
            <par_000>
                <par_name>CO_SIM_DELAY</par_name>
                <par_value>100</par_value>
            </par_000>
            <par_001>
                <par_name>CO_SIM_LOGS_PATH</par_name>
                <par_value>/logs</par_value>
            </par_001>
            <par_002>
                <par_name>CO_SIM_MONITORING_DATA_PATH</par_name>
                <par_value>/monitoring_data</par_value>
            </par_002>
            <par_003>
                <par_name>CO_SIM_RESULTS_OUTPUT_PATH</par_name>
                <par_value>/simulation_results</par_value>
            </par_003>
        </parameters>
        <arrangement>
            <!-- 
                NOTE: arranger will first check if the output directories are
                already created, and will only create if they do not exist
            -->
            <arr_001>
                <arr_duty>CO_SIM_ARRANGEMENT_CHECK_BEFORE_CREATION</arr_duty>
                <arr_what>{CO_SIM_RESULTS_PATH}{CO_SIM_LOGS_PATH}</arr_what>
            </arr_001>
            <arr_002>
                <arr_duty>CO_SIM_ARRANGEMENT_CHECK_BEFORE_CREATION</arr_duty>
                <arr_what>{CO_SIM_RESULTS_PATH}{CO_SIM_MONITORING_DATA_PATH}</arr_what>
            </arr_002>
            <arr_003>
                <arr_duty>CO_SIM_ARRANGEMENT_CHECK_BEFORE_CREATION</arr_duty>
                <arr_what>{CO_SIM_RESULTS_PATH}{CO_SIM_RESULTS_OUTPUT_PATH}</arr_what>
            </arr_003>
        </arrangement>
        <action_plan>
            <!--
                NOTE: action_NNN will be sorted, meaning that NNN must be a correlative number
                 representing the point where/when the action will be launched
            -->

            <!-- initialization stage -->
            <!-- <action_000>
                <action_type>CO_SIM_ACTION</action_type>
                <action_xml>initial_spikes_generator.xml</action_xml>
                <action_launch_method>CO_SIM_SEQUENTIAL_ACTION</action_launch_method>
            </action_000> -->

            <!-- <action_002> -->
                <!-- waiting until the preceding action finishes -->
                <!-- <action_type>CO_SIM_EVENT</action_type> -->
                <!-- <action_event>CO_SIM_WAIT_FOR_SEQUENTIAL_ACTIONS</action_event> -->
            <!-- </action_002> -->

            <!-- main plan action proceeding -->
            <action_004>
                <action_type>CO_SIM_ACTION</action_type>
                <action_xml>test_cosim_nest.xml</action_xml>
                <action_launch_method>CO_SIM_CONCURRENT_ACTION</action_launch_method>
            </action_004>
            <action_006>
                <action_type>CO_SIM_ACTION</action_type>
                <action_xml>test_cosim_interscalehub_nest_to_tvb.xml</action_xml>
                <action_launch_method>CO_SIM_CONCURRENT_ACTION</action_launch_method>
            </action_006>
            <action_008>
                <action_type>CO_SIM_ACTION</action_type>
                <action_xml>test_cosim_interscalehub_tvb_to_nest.xml</action_xml>
                <action_launch_method>CO_SIM_CONCURRENT_ACTION</action_launch_method>
            </action_008>
            <action_010>
                <action_type>CO_SIM_ACTION</action_type>
                <action_xml>test_cosim_tvb.xml</action_xml>
                <action_launch_method>CO_SIM_CONCURRENT_ACTION</action_launch_method>
            </action_010>
            <!-- epilogue -->
            <action_012>
                <!-- waiting until the preceding actions finishes -->
                <action_type>CO_SIM_EVENT</action_type>
                <action_event>CO_SIM_WAIT_FOR_CONCURRENT_ACTIONS</action_event>
            </action_012>
        </action_plan>
    </co_simulation_action_plan>
</settings>
